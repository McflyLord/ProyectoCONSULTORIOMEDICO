/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import ARRAYLIST.MedicoList;
import ARRAYLIST.PacienteList;
import CLASES.Medico;
import CLASES.Paciente;
import Validadores.Validador;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pablo
 */
public class Principal extends javax.swing.JFrame {
    private PacienteList pacienteList = new PacienteList();
    private MedicoList medicoList = new MedicoList();     // Lista de pacientes
    /**
     * Creates new form Principal
     */
           
    public Principal() {
        initComponents();
        Panel2.removeAll();     // Verifica que no haya otros componentes.
        Panel2.add(PanelPrincipal);     // Agrega el panel que elejo.
        Panel2.repaint();       // Hacen que se actualize y el cambio sea inmediato.
        Panel2.revalidate();    // Lo de arriba XD.
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel1 = new javax.swing.JPanel();
        btnSalir = new javax.swing.JButton();
        btnPaciente = new javax.swing.JButton();
        btnMedico = new javax.swing.JButton();
        btnCita = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Panel2 = new javax.swing.JPanel();
        PanelPaciente = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPacientes = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        ButtonEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        btnListar = new javax.swing.JButton();
        PanelCita = new javax.swing.JPanel();
        btnAgregarCita = new javax.swing.JButton();
        btnEditarCita = new javax.swing.JButton();
        btnEliminarCita = new javax.swing.JButton();
        btnBuscarCita = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbCitas = new javax.swing.JTable();
        PanelMedico = new javax.swing.JPanel();
        btnAgregarMedico = new javax.swing.JButton();
        btnEditarMedico = new javax.swing.JButton();
        btnEliminarMedico = new javax.swing.JButton();
        btnBuscarMedico = new javax.swing.JButton();
        txtBuscarMedico = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMedico = new javax.swing.JTable();
        btnListarMedico = new javax.swing.JButton();
        PanelPrincipal = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Panel1.setBackground(new java.awt.Color(129, 195, 201));
        Panel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(0, 0, 0)));
        Panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        Panel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 470, 130, 30));

        btnPaciente.setText("Paciente");
        btnPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPacienteActionPerformed(evt);
            }
        });
        Panel1.add(btnPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 130, 30));

        btnMedico.setText("Medico");
        btnMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicoActionPerformed(evt);
            }
        });
        Panel1.add(btnMedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 130, 30));

        btnCita.setText("Cita");
        btnCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCitaActionPerformed(evt);
            }
        });
        Panel1.add(btnCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 130, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/People.png"))); // NOI18N
        Panel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 70, 70));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Doctor.png"))); // NOI18N
        Panel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        getContentPane().add(Panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 140, 500));

        Panel2.setBackground(new java.awt.Color(255, 255, 255));
        Panel2.setLayout(new java.awt.CardLayout());

        PanelPaciente.setBackground(new java.awt.Color(204, 204, 0));

        tbPacientes.setAutoCreateRowSorter(true);
        tbPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Nombres", "Apellidos", "Género", "Fecha Naci.", "Dirección", "Email", "Telefono", "G. sanguíneo", "Adversión", "Enfermedades", "Fecha Ins."
            }
        ));
        tbPacientes.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tbPacientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tbPacientes);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        ButtonEditar.setText("Editar");
        ButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelPacienteLayout = new javax.swing.GroupLayout(PanelPaciente);
        PanelPaciente.setLayout(PanelPacienteLayout);
        PanelPacienteLayout.setHorizontalGroup(
            PanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPacienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                    .addGroup(PanelPacienteLayout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(ButtonEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnListar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)))
                .addContainerGap())
        );
        PanelPacienteLayout.setVerticalGroup(
            PanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPacienteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(ButtonEditar)
                    .addComponent(btnEliminar)
                    .addComponent(btnBuscar)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnListar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        Panel2.add(PanelPaciente, "card2");

        PanelCita.setBackground(new java.awt.Color(255, 204, 204));
        PanelCita.setPreferredSize(new java.awt.Dimension(639, 475));

        btnAgregarCita.setText("Agregar");
        btnAgregarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCitaActionPerformed(evt);
            }
        });

        btnEditarCita.setText("Editar");
        btnEditarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCitaActionPerformed(evt);
            }
        });

        btnEliminarCita.setText("Eliminar");

        btnBuscarCita.setText("Buscar");
        btnBuscarCita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCitaActionPerformed(evt);
            }
        });

        tbCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Fecha", "Hora", "Motivo"
            }
        ));
        tbCitas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(tbCitas);

        javax.swing.GroupLayout PanelCitaLayout = new javax.swing.GroupLayout(PanelCita);
        PanelCita.setLayout(PanelCitaLayout);
        PanelCitaLayout.setHorizontalGroup(
            PanelCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCitaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(PanelCitaLayout.createSequentialGroup()
                        .addComponent(btnAgregarCita)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarCita)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarCita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarCita)))
                .addContainerGap())
        );
        PanelCitaLayout.setVerticalGroup(
            PanelCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCitaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelCitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarCita)
                    .addComponent(btnEditarCita)
                    .addComponent(btnEliminarCita)
                    .addComponent(btnBuscarCita)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Panel2.add(PanelCita, "card3");

        PanelMedico.setBackground(new java.awt.Color(204, 255, 255));

        btnAgregarMedico.setText("Agregar");
        btnAgregarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMedicoActionPerformed(evt);
            }
        });

        btnEditarMedico.setText("Editar");
        btnEditarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarMedicoActionPerformed(evt);
            }
        });

        btnEliminarMedico.setText("Eliminar");
        btnEliminarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMedicoActionPerformed(evt);
            }
        });

        btnBuscarMedico.setText("Buscar");
        btnBuscarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarMedicoActionPerformed(evt);
            }
        });

        tbMedico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Colegiatura", "DNI", "Nombres", "Apellidos", "Fecha de nacimiento", "Género", "Dirección", "Teléfono", "Email", "Especialidad", "Grado"
            }
        ));
        tbMedico.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tbMedico);

        btnListarMedico.setText("Listar");
        btnListarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarMedicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelMedicoLayout = new javax.swing.GroupLayout(PanelMedico);
        PanelMedico.setLayout(PanelMedicoLayout);
        PanelMedicoLayout.setHorizontalGroup(
            PanelMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMedicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                    .addGroup(PanelMedicoLayout.createSequentialGroup()
                        .addComponent(btnAgregarMedico)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarMedico)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminarMedico)
                        .addGap(18, 18, 18)
                        .addComponent(btnListarMedico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtBuscarMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarMedico)))
                .addContainerGap())
        );
        PanelMedicoLayout.setVerticalGroup(
            PanelMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMedicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelMedicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarMedico)
                    .addComponent(btnEditarMedico)
                    .addComponent(btnEliminarMedico)
                    .addComponent(txtBuscarMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarMedico)
                    .addComponent(btnListarMedico))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        Panel2.add(PanelMedico, "card4");

        PanelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        PanelPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Fondo.jpg"))); // NOI18N
        PanelPrincipal.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 500));

        Panel2.add(PanelPrincipal, "card5");

        getContentPane().add(Panel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(144, 2, 640, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
    System.exit(0);     // Cierra todas las ventanas.
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPacienteActionPerformed
    Panel2.removeAll();
    Panel2.add(PanelPaciente);
    Panel2.repaint();
    Panel2.revalidate();
    }//GEN-LAST:event_btnPacienteActionPerformed

    private void btnMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicoActionPerformed
    Panel2.removeAll();
    Panel2.add(PanelMedico);
    Panel2.repaint();
    Panel2.revalidate();
    }//GEN-LAST:event_btnMedicoActionPerformed

    private void btnCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCitaActionPerformed
    Panel2.removeAll();
    Panel2.add(PanelCita);
    Panel2.repaint();
    Panel2.revalidate();
    }//GEN-LAST:event_btnCitaActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
    AgregarPaciente agregar = new AgregarPaciente(); // Instanciamos.
            agregar.setVisible(true); // Para poder visualizar la Interfaz que eligamos.
            dispose(); // Cierra la ventana.
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
      String F_dniTexto = txtBuscar.getText().trim(); // Obtenemos lo ingresado en txtBuscar y el (.trim) limpia los espacios en blanco.
    
      //Validamos si el campo esta vacío, el (.isEmpty) comprueba si esat vacío.
    if (F_dniTexto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Ingrese un DNI");
        return; // Si falla el programa se detiene.
    }
    
    //Validamos El campo.
    if (!Validador.DNI(F_dniTexto)) {
    JOptionPane.showMessageDialog(this, "El DNI debe contener exactamente 8 dígitos numéricos.");
    txtBuscar.setText(""); // Limpia el campo.
    return;
    }
    
    int dni = Integer.parseInt(F_dniTexto);       // Convierte en valor ingresado a entero.
    
    // Buscar paciente.
    Paciente paciente = pacienteList.buscar(dni);       //usamos el metodo buscar de la arraylist.
    if (paciente != null) {     // Si se encuentra al paciente.
        actualizar1(List.of(paciente)); // Llama al método actualiza y este crea una lista con el paciente que encontro.
    } else {    // De no haber pasiente manda este mensaje.
        JOptionPane.showMessageDialog(this, "No hay paciente");
    }

    txtBuscar.setText(""); // Limpia el campo después de buscar.
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCitaActionPerformed

    }//GEN-LAST:event_btnEditarCitaActionPerformed

    private void btnAgregarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCitaActionPerformed
AgregarCita agregar = new AgregarCita(); // Instanciamos.
            agregar.setVisible(true); // Para poder visualizar la Interfaz que eligamos.
            dispose(); // Cierra la ventana.
    }//GEN-LAST:event_btnAgregarCitaActionPerformed

    private void btnBuscarCitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarCitaActionPerformed

    private void ButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEditarActionPerformed

    }//GEN-LAST:event_ButtonEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
    // Obtener la fila seleccionada.
    int filaSeleccionada = tbPacientes.getSelectedRow();

    // Validar si se seleccionó una fila.
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Seleccione un paciente", "Error", JOptionPane.ERROR_MESSAGE);
        return; // Salir del método si no hay selección.
    }

    // Obtener el DNI .
    int dni = (int) tbPacientes.getValueAt(filaSeleccionada, 0);

    // Buscar al paciente en la lista.
    Paciente paciente = pacienteList.buscar(dni);
    if (paciente != null) {
        // Eliminar el paciente si existe.
        pacienteList.eliminar(paciente);
        JOptionPane.showMessageDialog(this, "Paciente eliminado", "Éxito", JOptionPane.INFORMATION_MESSAGE);

        // Actualizar la tabla después de la eliminación.
        btnListarActionPerformed(null); // Vuelve a cargar los datos en la tabla.
    } else {
        // Mostrar mensaje si el paciente no fue encontrado.
        JOptionPane.showMessageDialog(this, "No se encontró el paciente con el DNI seleccionado.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAgregarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMedicoActionPerformed
   AgregarMedico agregar = new AgregarMedico(); // Instanciamos.
            agregar.setVisible(true); // Para poder visualizar la Interfaz que eligamos.
            dispose(); // Cierra la ventana.
    }//GEN-LAST:event_btnAgregarMedicoActionPerformed

    private void btnEditarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarMedicoActionPerformed

    private void btnEliminarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMedicoActionPerformed
        // Obtener la fila seleccionada.
    int filaSeleccionada = tbMedico.getSelectedRow();

    // Validar si se seleccionó una fila.
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Seleccione un medico", "Error", JOptionPane.ERROR_MESSAGE);
        return; // Salir del método si no hay selección.
    }

    // Obtener el DNI .
    int dni = (int) tbMedico.getValueAt(filaSeleccionada, 0);

    // Buscar al medico en la lista.
    Medico medico = medicoList.buscar(dni);
    if (medico != null) {
        // Eliminar el medico si existe.
        medicoList.eliminar(medico);
        JOptionPane.showMessageDialog(this, "Medico eliminado", "Éxito", JOptionPane.INFORMATION_MESSAGE);

        // Actualizar la tabla después de la eliminación.
        btnListarActionPerformed(null); // Vuelve a cargar los datos en la tabla.
    } else {
        // Mostrar mensaje si el paciente no fue encontrado.
        JOptionPane.showMessageDialog(this, "No se encontró el Medico con la DNI seleccionada", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnEliminarMedicoActionPerformed

    private void btnBuscarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarMedicoActionPerformed
      String F_dniTexto = txtBuscarMedico.getText().trim(); // Obtenemos lo ingresado en txtBuscar y el (.trim) limpia los espacios en blanco.
    
      //Validamos si el campo esta vacío, el (.isEmpty) comprueba si esat vacío.
    if (F_dniTexto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Ingrese un DNI");
        return; // Si falla el programa se detiene.
    }
    
    //Validamos El campo.
    if (!Validador.DNI(F_dniTexto)) {
    JOptionPane.showMessageDialog(this, "El DNI debe contener exactamente 8 numeros.");
    txtBuscarMedico.setText(""); // Limpia el campo.
    return;
    }
    
    int dni = Integer.parseInt(F_dniTexto);       // Convierte en valor ingresado a entero.
    
    // Buscar paciente.
    Medico medico = medicoList.buscar(dni);       //usamos el metodo buscar de la arraylist.
    if (medico != null) {     // Si se encuentra al paciente.
        actualizar2(List.of(medico)); // Llama al método actualiza y este crea una lista con el medico que encontro.
    } else {    // De no haber pasiente manda este mensaje.
        JOptionPane.showMessageDialog(this, "No hay medico");
    }

    txtBuscar.setText(""); // Limpia el campo después de buscar.
    }//GEN-LAST:event_btnBuscarMedicoActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        actualizar1(pacienteList.listarPacientes()); // Llama al metodo Actualizar
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnListarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarMedicoActionPerformed
        actualizar2(medicoList.listarMedicos()); // Llama al metodo Actualizar
    }//GEN-LAST:event_btnListarMedicoActionPerformed

    private void actualizar1(List<Paciente> listaPacientes) {
    DefaultTableModel modelo = (DefaultTableModel) tbPacientes.getModel();
    modelo.setRowCount(0);  //Limpiar filas existentes.

    for (Paciente paciente : listaPacientes) {      // Bucle que permite iterar sobre cada Paciente de la lista "listaPacientes", cada paciente de un objeto Paciente 
        Object[] fila = {       // Se crean arreglos para cada columna.
            paciente.getF_dni(),
            paciente.getF_nombres(),
            paciente.getF_apellidos(),
            paciente.getF_fechaNacimiento(),
            paciente.getF_genero(),
            paciente.getF_direccion(),
            paciente.getF_telefono(),
            paciente.getF_email(),
            paciente.getF_grupoSanguineo(),
            paciente.getF_aversiones(),
            paciente.getF_enfermedades(),
            paciente.getF_fechaInscripcion()
        };
        modelo.addRow(fila);        // Se agrega una nueva fila al modelo que seria la tabla del arreglo fila.
    }
    tbPacientes.setModel(modelo); //Para los cambios.
}

    private void actualizar2(List<Medico> listaMedicos) {
    DefaultTableModel modelo1 = (DefaultTableModel) tbMedico.getModel();
    modelo1.setRowCount(0);  //Limpiar filas existentes.

    for (Medico medicos : listaMedicos) {      // Bucle que permite iterar sobre cada Paciente de la lista "listaMedicos", cada medico de un objeto Medico 
        Object[] fila1 = {       // Se crean arreglos para cada columna.
            medicos.getF_dni(),
            medicos.getF_nombres(),
            medicos.getF_apellidos(),
            medicos.getF_fechaNacimiento(),
            medicos.getF_genero(),
            medicos.getF_direccion(),
            medicos.getF_telefono(),
            medicos.getF_email(),
            medicos.getF_colegiatura(),
            medicos.getF_especialidad(),
            medicos.getF_grado(),
        };
        modelo1.addRow(fila1);        // Se agrega una nueva fila al modelo1 que seria la tabla del arreglo fila1.
    }
    tbPacientes.setModel(modelo1); //Para los cambios.
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonEditar;
    private javax.swing.JPanel Panel1;
    private javax.swing.JPanel Panel2;
    private javax.swing.JPanel PanelCita;
    private javax.swing.JPanel PanelMedico;
    private javax.swing.JPanel PanelPaciente;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarCita;
    private javax.swing.JButton btnAgregarMedico;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarCita;
    private javax.swing.JButton btnBuscarMedico;
    private javax.swing.JButton btnCita;
    private javax.swing.JButton btnEditarCita;
    private javax.swing.JButton btnEditarMedico;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarCita;
    private javax.swing.JButton btnEliminarMedico;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnListarMedico;
    private javax.swing.JButton btnMedico;
    private javax.swing.JButton btnPaciente;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tbCitas;
    private javax.swing.JTable tbMedico;
    private javax.swing.JTable tbPacientes;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtBuscarMedico;
    // End of variables declaration//GEN-END:variables
}
